<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo App</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .todo-container {
            max-width: 600px;
            margin: 50px auto;
        }
        .todo-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border: 1px solid #ced4da;
            border-radius: 5px;
            margin-bottom: 10px;
            background: #fff;
        }
        .todo-item.completed .task {
            text-decoration: line-through;
            color: #6c757d;
        }
    </style>
</head>
<body>
    <div class="container todo-container">
        <h1 class="text-center mb-4">Todo App</h1>
        <div class="mb-3">
            <input id="taskInput" type="text" class="form-control" placeholder="Enter new task">
        </div>
        <button id="addTaskButton" class="btn btn-primary w-100 mb-3">Add Task</button>
        <ul id="todoList" class="list-unstyled"></ul>
    </div>

    <script>
        const taskInput = document.getElementById('taskInput');
        const addTaskButton = document.getElementById('addTaskButton');
        const todoList = document.getElementById('todoList');

        const tasks = [];

        function renderTasks() {
            todoList.innerHTML = '';
            tasks.forEach((task, index) => {
                const taskElement = document.createElement('li');
                taskElement.className = `todo-item ${task.completed ? 'completed' : ''}`;
                
                taskElement.innerHTML = `
                    <span class="task">${task.text}</span>
                    <div>
                        <button class="btn btn-sm btn-success me-2" onclick="toggleTask(${index})">${task.completed ? 'Unmark' : 'Complete'}</button>
                        <button class="btn btn-sm btn-danger" onclick="deleteTask(${index})">Delete</button>
                    </div>
                `;
                todoList.appendChild(taskElement);
            });
        }

        function addTask() {
            const taskText = taskInput.value.trim();
            if (taskText === '') {
                alert('Task cannot be empty!');
                return;
            }

            tasks.push({ text: taskText, completed: false });
            taskInput.value = '';
            renderTasks();
        }

        function toggleTask(index) {
            tasks[index].completed = !tasks[index].completed;
            renderTasks();
        }

        function deleteTask(index) {
            tasks.splice(index, 1);
            renderTasks();
        }

        addTaskButton.addEventListener('click', addTask);
        taskInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                addTask();
            }
        });
    </script>
</body>
</html>
